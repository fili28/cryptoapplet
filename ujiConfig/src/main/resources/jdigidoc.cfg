# JDigiDoc config file

# Signature processor settings
DIGIDOC_SIGN_IMPL=es.uji.dsign.crypto.digidoc.factory.PKCS11SignatureFactory
DIGIDOC_SIGN_IMPL_PKCS11=es.uji.dsign.crypto.digidoc.factory.PKCS11SignatureFactory
DIGIDOC_NOTARY_IMPL=es.uji.dsign.crypto.digidoc.factory.BouncyCastleNotaryFactory
DIGIDOC_FACTORY_IMPL=es.uji.dsign.crypto.digidoc.factory.SAXDigiDocFactory
DIGIDOC_TIMESTAMP_IMPL=es.uji.dsign.digidoc.factory.BouncyCastleSignatureTimestampFactory
CANONICALIZATION_FACTORY_IMPL=es.uji.dsign.crypto.digidoc.factory.DOMCanonicalizationFactory
CRL_FACTORY_IMPL=es.uji.dsign.crypto.digidoc.factory.CRLCheckerFactory

# Security settings
DIGIDOC_SECURITY_PROVIDER=org.bouncycastle.jce.provider.BouncyCastleProvider
DIGIDOC_SECURITY_PROVIDER_NAME=BC

# PKCS#11 module settings - change this according to your signature device!!!
DIGIDOC_SIGN_PKCS11_DRIVER=/usr/lib/pkcs11/opensc-pkcs11.so

# VS: this is PKCS#11 driver for AID cards (GPK8000)
#DIGIDOC_SIGN_PKCS11_DRIVER=pk2priv
DIGIDOC_SIGN_PKCS11_WRAPPER=PKCS11Wrapper
#DIGIDOC_VERIFY_ALGORITHM=RSA//NOPADDING
DIGIDOC_VERIFY_ALGORITHM=RSA//

DIGIDOC_DRIVER_BASE_URL=http://localhost:8080/XMLSign/

# VS: log4j config file - change this!!!
#DIGIDOC_LOG4J_CONFIG=jar://SignatureLogging.properties

# OCSP responder URL - change this!!!
DIGIDOC_OCSP_RESPONDER_COUNT=2
DIGIDOC_OCSP_RESPONDER_URL1=http://ocsp.pki.gva.es
DIGIDOC_OCSP_RESPONDER_URL2=http://ocsp.dnie.es

# your HTTP proxy if necessary - change this if required or comment out!!!
#DIGIDOC_PROXY_HOST=<your-http-proxy-server>
#DIGIDOC_PROXY_PORT=<your-http-proxy-port>

# VS: sign OCSP requests or not. Depends on your responder
SIGN_OCSP_REQUESTS=false
OCSP_SAVE_DIR=.
# The PKCS#12 file used to sign OCSP requests
DIGIDOC_PKCS12_CONTAINER=<your-pkcs12-tokens-filename>
# password for this key
DIGIDOC_PKCS12_PASSWD=<your-pkcs12-tokens-password>

# serial number of your PKCS#12 signature cert. 
# Use ee.sk.test.OCSPCertFinder to find this
DIGIDOC_OCSP_SIGN_CERT_SERIAL=<your-pkcs12-tokens-user-certs-serial-number>


# VS: CA certificates. Used to do a prelimenary check of signer.
# Not required. If used then signers cert will be accepted if
# it is directly issued by one of the CA-s here. 
DIGIDOC_CA_CERTS=4
DIGIDOC_CA_CERT1=jar://cagva.pem
DIGIDOC_CA_CERT2=jar://rootca.pem
DIGIDOC_CA_CERT3=jar://accv-ca2.pem
DIGIDOC_CA_CERT4=jar://ACDNIE002-SHA1.pem

# VS: OCSP responder certificates - change this!!!
# GVA
DIGIDOC_OCSP_COUNT=2
DIGIDOC_OCSP1_CN=ocsp-gva
DIGIDOC_OCSP1_CERT=jar://ocsp-gva.crt
DIGIDOC_OCSP1_CA_CERT=jar://cagva.pem
DIGIDOC_OCSP1_CA_CN=CAGVA

DIGIDOC_OCSP2_CN=AV DNIE FNMT
DIGIDOC_OCSP2_CERT=jar://DNIEOCSP.pem
DIGIDOC_OCSP2_CA_CERT=jar://ACDNIE001.pem
DIGIDOC_OCSP2_CA_CN=AC DNIE 001


# OCSP or CRL selectors
DIGIDOC_CERT_VERIFIER=OCSP 
DIGIDOC_SIGNATURE_VERIFIER=OCSP 

# VS not required if you don't use CRL-s
# CRL settings
CRL_USE_LDAP=false
CRL_URL=http://www.accv.es/gestcert/cagva_der.crl 
#CRL_SEARCH_BASE=cn=ESTEID-SK,ou=ESTEID,o=AS Sertifitseerimiskeskus,c=EE
#CRL_FILTER=(certificaterevocationlist;binary=*)
#CLR_LDAP_DRIVER=com.ibm.jndi.LDAPCtxFactory
#CRL_LDAP_URL=ldap://194.126.99.76:389
#CRL_LDAP_ATTR=certificaterevocationlist;binary
#CRL_PROXY_HOST=<http-proxy-server>
#CRL_PROXY_PORT=<http-proxy-port>

# Encryption settings
DIGDOC_ENCRYPT_KEY_ALG=AES
#DIGIDOC_ENCRYPTION_ALOGORITHM=AES/CBC/PKCS7Padding
DIGIDOC_ENCRYPTION_ALOGORITHM=AES/CBC/NOPADDING
DIGIDOC_SECRANDOM_ALGORITHM=SHA1PRNG
DIGIDOC_KEY_ALOGORITHM=RSA/NONE/PKCS1Padding
DIGDOC_ENCRYPT_USE_IV=TRUE

DIGIDOC_TSA_COUNT=1
DIGIDOC_TSA1_CERT=jar://tsa1_accv.der
DIGIDOC_TSA1_CA_CERT=jar://tsa1_accv.der
DIGIDOC_TSA1_USE_NONCE=false
DIGIDOC_TSA1_ASK_CERT=false
DIGIDOC_TSA1_URL=http://tss.accv.es:8318/tsa
DIGIDOC_TSA1_CN=CAGVA
DIGIDOC_TSA1_CA_CN=CAGVA
DIGIDOC_TSA1_SN=12
MAX_TSA_TIME_ERR_SECS=60

